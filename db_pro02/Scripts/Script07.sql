CREATE TABLE SAMPLE(
	  ID     NUMBER                  PRIMARY KEY
	, NAME   VARCHAR2(30)            NOT NULL
	, GENDER CHAR(1)                 CHECK(GENDER IN ('F', 'M'))
	, AGE    NUMBER       DEFAULT(0) NOT NULL
);

INSERT INTO SAMPLE(ID, NAME, GENDER, AGE) VALUES(1, '홍길동', 'M', 27);
INSERT INTO SAMPLE(ID, NAME, GENDER, AGE) VALUES(2, '김주영', 'M', 30);
INSERT INTO SAMPLE(ID, NAME, GENDER     ) VALUES(3, '박수안', 'F'    ); --에러없음
INSERT INTO SAMPLE(ID, NAME, GENDER, AGE) VALUES(4, '이종석', 'M', 25);
INSERT INTO SAMPLE VALUES(5, '최설은', 'F', DEFAULT);

COMMIT;

SELECT * FROM USER_SYS_PRIVS; -- PUSER1이 CREATE VIEW 권한이 있어야함

CREATE OR REPLACE VIEW V_SAMPLE
	AS SELECT NAME
			, GENDER
			, AGE
		FROM SAMPLE;

SELECT * FROM V_SAMPLE;

-- SAMPLE에 ID를 PRIMARY KEY로 만들었는데 NULL로 넣었기때문에 오류
-- ID값을 넣어도 V_SAMPLE에 ID를 지정하지 않으면 오류가 나온다
INSERT INTO V_SAMPLE VALUES('곽종수', 'F', 30);

CREATE OR REPLACE VIEW V_SAMPLE
	AS SELECT ID
			, NAME
			, GENDER			
		FROM SAMPLE;

SELECT * FROM V_SAMPLE;

-- AGE에는 DEFAULT가 있기때문에 제외해도 오류가 없다
INSERT INTO V_SAMPLE VALUES(6, '곽종수', 'F');


CREATE OR REPLACE VIEW V_SAMPLE
	AS SELECT ID
			, NAME
			, GENDER
			, DECODE(AGE, 0, 0, AGE - 2) AS AGE
 		FROM SAMPLE;

SELECT * FROM V_SAMPLE;

-- 계산식은 사용할수 없다
INSERT INTO V_SAMPLE VALUES(7, '김도연', 'F', 23);
	
-- VIEW 목록을 볼 수 있다
SELECT * FROM USER_VIEWS;

-- WITH CHECK OPTION
CREATE OR REPLACE VIEW V_SAMPLE
	AS SELECT ID
			, NAME
			, GENDER
			, AGE
 		FROM SAMPLE
 		WHERE AGE BETWEEN 25 AND 29
 WITH CHECK OPTION;

COMMIT;
ROLLBACK;
-- 23살은 WHERE절에 속하지 않기때문에 
-- WITH CHECK OPTION에 위배되어서 UPDATE불가능
UPDATE V_SAMPLE
   SET AGE = 23
 WHERE ID = 1;

SELECT * FROM V_SAMPLE;

-- WITH READ ONLY 읽기만 가능
CREATE OR REPLACE VIEW V_SAMPLE
	AS SELECT ID
			, NAME
			, GENDER
			, AGE
 		FROM SAMPLE
 		WHERE AGE BETWEEN 20 AND 29
 WITH READ ONLY;

UPDATE V_SAMPLE
   SET AGE = 27
 WHERE ID = 1;

DROP SEQUENCE SEQ_TEST;

CREATE SEQUENCE SEQ_TEST
		START WITH 300  -- 시작값
	INCREMENT BY     5  -- 증가폭
	 MAXVALUE      310  -- 최대값
	  CYCLE             -- 최대값넘어가면 MINVALUE로
	  NOCACHE;          -- 메모리상에서 시퀀스 값
	  
	  
-- NEXTVAL 다음단계로 진행	  
SELECT SEQ_TEST.NEXTVAL FROM DUAL;
-- CURRVAL 현지 값 반환(처음 조회할때는 NEXTVAL먼저 사용해야 조회가능)
SELECT SEQ_TEST.CURRVAL FROM DUAL;
--SEQUECE 목록 확인
SELECT * FROM USER_SEQUENCES;


-- SEQUENCE를 INSERT에 VALUES에 넣기
CREATE SEQUENCE SEQ_SAMPLE START WITH 7 NOCACHE;

SELECT * FROM SAMPLE;
INSERT INTO SAMPLE VALUES(SEQ_SAMPLE.NEXTVAL, '시퀀스', 'F', 0);
-- DELETE해서 지우면 중간중간 빠진 SEQ번호를 채워주지는 않음
DELETE FROM SAMPLE WHERE ID = 7;



ROLLBACK;
COMMIT;



