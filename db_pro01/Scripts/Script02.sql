/*
 * HR 데이터 정보 확인
 */

-- 직원 테이블
SELECT * FROM EMPLOYEES;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID  = 100;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID  > 100;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID  != 100;
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID  <> 100;

-- 부서 테이블
SELECT * FROM DEPARTMENTS;
SELECT DEPARTMENT_ID, DEPARTMENT_NAME FROM DEPARTMENTS;

-- 직급 테이블
SELECT * FROM JOBS;

-- 국가 테이블
SELECT * FROM COUNTRIES;

-- 국가의 지역 테이블
SELECT * FROM LOCATIONS;

-- 대륙 정보 테이블
SELECT * FROM REGIONS;



-- 컬럼명에 별칭 부여
SELECT EMPLOYEE_ID AS "사번" 
	, FIRST_NAME "이름" 
	, LAST_NAME 성 
	, EMAIL "이메일 주소" FROM EMPLOYEES;
--(AS /AS 생략 /FIRST_NAME /LAST_NAME 사용한다)
--(쌍따옴표 써도 안써도 된다, 띄어쓰기있을때는 쌍따옴표 사용)

-- 컬럼과의 연산
SELECT EMPLOYEE_ID "사번"
	, LAST_NAME || '  ' || FIRST_NAME "성명"
	, SALARY * 12  || ' 달러' "연봉"
	FROM EMPLOYEES;
-- (문자열은 더하기 || 사용)
-- (수치는 사칙연산 그대로사용)



-- 조건절
SELECT EMPLOYEE_ID "사번"
	, FIRST_NAME
	, LAST_NAME
	, EMAIL
	, PHONE_NUMBER
	, HIRE_DATE
	, JOB_ID
	, SALARY
	, COMMISSION_PCT
	, MANAGER_ID
	, DEPARTMENT_ID
	FROM EMPLOYEES
 WHERE EMPLOYEE_ID > 200;
-- (별칭을 사번으로 변경했다고 하도 조건절에서는 원래 컬럼명으로 사용해야함)
-- (FROM 읽고 > WHERE 읽고 > SELECT 읽음)


-- 조건절에서 사용하는 연산자
-- AND, OR, IN, NOT, NOT IN, BETWEEN ... AND
-- LIKE, IS NULL, IS NOT NULL

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID > 200 
	AND SALARY >= 10000;

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID > 200 
	OR SALARY >= 10000;

SELECT * FROM EMPLOYEES
 WHERE NOT EMPLOYEE_ID > 200 
	AND SALARY >= 10000;
-- (200보다 크지 않고, 월급이 10000보다 높은것)

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID IN (200, 201, 202, 203);
-- (IN 옆에 소괄호로 묶어진 데이터가 포함된 값을 출력하라)

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID NOT IN (200, 201, 202, 203);

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID BETWEEN 200 AND 203;

SELECT * FROM EMPLOYEES
 WHERE EMPLOYEE_ID NOT BETWEEN 200 AND 203;
 

SELECT * FROM EMPLOYEES
 WHERE JOB_ID LIKE 'AD%';
-- (AD로 시작하고 어떠한 내용이 와도 상관없음을 의미)

SELECT * FROM EMPLOYEES
 WHERE JOB_ID LIKE '%VP';
 
SELECT * FROM EMPLOYEES
 WHERE JOB_ID LIKE '%A%';
-- (A가 들어간 문자열 찾기)

SELECT * FROM EMPLOYEES
 WHERE PHONE_NUMBER LIKE '___.127.____';
-- (_ 자릿수 지정)

SELECT * FROM EMPLOYEES 
 WHERE JOB_ID LIKE '%#____' ESCAPE '#';
-- (언더바를 포함해서 지정하고 싶을때 ESCAPE 사용)
-- (#_가 문자가 되는 것)

SELECT * FROM EMPLOYEES 
 WHERE JOB_ID LIKE '%\____' ESCAPE '\';
SELECT * FROM EMPLOYEES 
 WHERE JOB_ID LIKE '%&____' ESCAPE '&';

-- (이스케이프 문자기호를 다양하게 사용 가능)


SELECT EMPLOYEE_ID
	, FIRST_NAME
	, LAST_NAME
	, COMMISSION_PCT
	FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NULL;
 
SELECT EMPLOYEE_ID
	, FIRST_NAME
	, LAST_NAME
	, COMMISSION_PCT
	FROM EMPLOYEES
 WHERE COMMISSION_PCT IS NOT NULL;
 -- (NULL값과 관련된 조회를 할때는 IS NULL과 IS NOT NULL만 사용 가능)

-- ("" : 별칭부여 / '' : 문자열 리터럴 사용할때)
